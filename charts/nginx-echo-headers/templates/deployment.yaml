{{- if or (not .Values.argoRollout.enabled) (.Values.argoRollout.workloadRef) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nginx-echo-headers.fullname" . }}
  labels:
    {{- include "nginx-echo-headers.labels" . | nindent 4 }}
spec:
  {{- if or (not .Values.autoscaling.enabled) (.Values.argoRollout.enabled) }}
  {{- if .Values.argoRollout.enabled }}
  replicas: 0
  {{- else }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- end }}
  strategy:
    {{- if and (ne .Values.deployment.strategy.type "Recreate") (ne .Values.deployment.strategy.type "RollingUpdate") }}
    {{- fail "deployment.strategy.type is case-sensitive and must be one of 'Recreate' or 'RollingUpdate'" }}
    {{- end }}
    type: {{ .Values.deployment.strategy.type }}
    {{- if ne .Values.deployment.strategy.type "Recreate" }}
    rollingUpdate:
      maxSurge: {{ .Values.deployment.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.deployment.strategy.rollingUpdate.maxUnavailable }}
    {{- end }}
  selector:
    matchLabels:
      {{- include "nginx-echo-headers.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nginx-echo-headers.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nginx-echo-headers.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
